<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--spring中的依赖注入
        依赖注入：Dependency Injection
        IOC的作用：降低程序间的耦合（依赖管理）
        依赖关系的管理：以后交给spring来管理，在当前类需要用到其他类的时候，由spring来为我们提供，我们只需要在配置文件中说明
        依赖关系的维护：称为依赖注入

        依赖注入：
            能注入的数据：有三类
                基本类型和string
                其他bean类型（在配置文件中或注解过的bean）
                复杂类型/集合类
             注入方式：
                1.使用构造函数提供
                2.使用set方法提供
                3.使用注解
    -->

    <!--构造函数注入
          使用的标签：constructor-arg
          标签出现的位置：bean标签的内部
          标签中的属性
            type:用于指定要注入的数据的数据类型，该类型也是构造函数中某个或某些的类型
            index:用于指定要注入的数据给构造函数中指定索引位置的参数赋值，索引从0开始
            name:用于指定给构造函数中指定名称的参数赋值
            value:用于指定基本类型和string类型的数据
            ref:用于指定其他的bean类型数据
    -->
    <bean id="accountService" class="com.lb.Service.impl.AccountServiceImpl">
        <constructor-arg name="name" value="林北"/>
        <constructor-arg name="age" value="21"/>
        <constructor-arg name="birthday" ref="time"/>
    </bean>

    <!--配置一个日期对象-->
    <bean id="time" class="java.util.Date"/>

    <!--set方法注入
        使用的标签：property，在bean内部使用
        属性
            name:用于指定注入时所调用的set方法名称
            value：用于提供基本类型和string类型的数据
            ref:用于指定其他的bean类型数据
    -->
    <bean id="accountService2" class="com.lb.Service.impl.AccountServiceImpl2">
        <property name="name" value="柠檬百事"/>
        <property name="age" value="20"/>
        <property name="birthday" ref="time"/>
    </bean>

    <!--复杂类型注入/集合类型注入-->
    <bean id="accountService3" class="com.lb.Service.impl.AccountServiceImpl3">
        <property name="myStr">
            <array>
                <value>array</value>
                <value>array</value>
                <value>array</value>
            </array>
        </property>
        <property name="myList">
            <list>
                <value>list</value>
                <value>list</value>
                <value>list</value>
            </list>
        </property>
        <property name="mySet">
            <set>
                <value>set</value>
                <value>set</value>
                <value>set</value>
            </set>
        </property>
        <property name="myMap">
            <map>
                <entry key="AAA" value="map"></entry>
                <entry key="BBB" >
                    <value>map</value>
                </entry>
            </map>
        </property>
        <property name="myProps">
            <props>
                <prop key="AAA">pros</prop>
                <prop key="BBB">pros</prop>
            </props>
        </property>
    </bean>
</beans>